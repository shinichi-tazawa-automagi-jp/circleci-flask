version: 2.1

##########
# Common
#########
orbs:
  aws-code-deploy: circleci/aws-code-deploy@2.0.0
  terraform: circleci/terraform@2.1.0
  aws-cli: circleci/aws-cli@2.0

############
# Workflows
############

workflows:
  version: 2
  build:
    jobs:
      - build-ami:
          context: context

#      - test:
#          context: context
#          requires:
#            - build-ami
#  deploy:
#    jobs:
#      - hold:
#          type: approval # UI 上に手動承認ボタンを表示させる
#          requires:
#            - build
#      - deploy:
#          context: context
#          requires:
#            - build
#            - hold
#            - test
#      - deploy:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
#  deploy_infrastructure:
#    jobs:
#      - terraform/fmt:
#          checkout: true
#          context: terraform
#      - terraform/validate:
#          checkout: true
#          context: terraform
#          requires:
#            - terraform/fmt
#      - terraform/plan:
#          checkout: true
#          context: terraform
#          persist-workspace: true
#          requires:
#            - terraform/validate
#      - terraform/apply:
#          attach-workspace: true
#          context: terraform
#          filters:
#            branches:
#              only: master
#          requires:
#            - terraform/plan

#  deploy_application:
#    jobs:
#      - aws-code-deploy/deploy:
#          application-name: myApplication
#          bundle-bucket: myApplicationS3Bucket
#          bundle-key: myS3BucketKey
#          deployment-group: myDeploymentGroup
#          service-role-arn: myDeploymentGroupRoleARN

##################
# Job Definitions
##################
jobs:
  build-ami:
    docker:
      - image: hashicorp/packer:latest
    working_directory: ~/
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run:
          name: Build
          command: packer build aws-linux.pkr.hcl
          no_output_timeout: 30m

  test:
    docker:
      - image: circleci/python:3.6.2-stretch-browsers
        environment:
          FLASK_CONFIG: testing
          TEST_DATABASE_URL: postgresql://ubuntu@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ''
    steps:
      - checkout
      - run: mkdir test-reports
      - run:
          name: Download Selenium
          command: |
            curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      - run:
          name: Start Selenium
          command: |
            java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
          background: true
      - restore_cache:
          key: deps2-{{ checksum "requirements/dev.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/dev.txt
      - save_cache:
          key: deps2-{{ checksum "requirements/dev.txt" }}
          paths:
            - 'venv'
      - run:
          command: |
            . venv/bin/activate
            python manage.py test
      - store_artifacts:
          path: test-reports/
          destination: tr1
      - store_test_results:
          path: test-reports/

  deploy:
    docker:
      - image: circleci/python:3.7-stretch
    working_directory: ~/circleci-docs
    steps:
      - run:
          name: awscli のインストール
          command: sudo pip install awscli
      - run:
          name: S3 へのデプロイ
          command: aws s3 sync jekyll/_site/docs s3://circle-production-static-site/docs/ --delete
